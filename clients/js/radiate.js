// Generated by CoffeeScript 1.3.3
(function() {
  var Radiate;

  Radiate = (function() {

    function Radiate(server, pusher_key) {
      this.server = server;
      this.pusher_key = pusher_key;
      this.pusher = new Pusher(pusher_key);
      this.channel = this.pusher.subscribe('updates');
    }

    Radiate.prototype.onupdate = function(key, callback) {
      return this.channel.bind("update:" + key, callback);
    };

    Radiate.prototype.get = function(key, callback) {
      var xhr;
      xhr = new XMLHttpRequest();
      xhr.open("GET", "" + this.server + "/" + key, true);
      xhr.onreadystatechange = function() {
        var data;
        if (xhr.readyState !== 4) {
          return;
        }
        data = JSON.parse(xhr.responseText);
        return callback(data);
      };
      return xhr.send(null);
    };

    Radiate.prototype.set = function(key, value, callback) {
      var data, xhr;
      xhr = new XMLHttpRequest();
      xhr.open("PUT", "" + this.server + "/" + key, true);
      xhr.onreadystatechange = function() {
        var data;
        if (xhr.readyState !== 4) {
          return;
        }
        data = JSON.parse(xhr.responseText);
        return callback(data);
      };
      data = {
        value: value
      };
      return xhr.send(JSON.stringify(data));
    };

    Radiate.prototype.incr = function(key, callback) {
      var data, xhr;
      xhr = new XMLHttpRequest();
      xhr.open("PUT", "" + this.server + "/" + key, true);
      xhr.onreadystatechange = function() {
        var data;
        if (xhr.readyState !== 4) {
          return;
        }
        data = JSON.parse(xhr.responseText);
        return callback(data);
      };
      data = {
        action: 'INCR'
      };
      return xhr.send(JSON.stringify(data));
    };

    Radiate.prototype.decr = function(key, callback) {
      var data, xhr;
      xhr = new XMLHttpRequest();
      xhr.open("PUT", "" + this.server + "/" + key, true);
      xhr.onreadystatechange = function() {
        var data;
        if (xhr.readyState !== 4) {
          return;
        }
        data = JSON.parse(xhr.responseText);
        return callback(data);
      };
      data = {
        action: 'DECR'
      };
      return xhr.send(JSON.stringify(data));
    };

    return Radiate;

  })();

  window.radiate = new Radiate('__RADIATE_SERVER__', '__PUSHER_KEY__');

}).call(this);
